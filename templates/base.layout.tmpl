{{define "base"}}
<!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>My Nice Page</title>

       <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bulma.min.css">
        <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
        {{block "css" .}}
        {{end}}


    </head>
    <body>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <nav class="navbar navbar-expand-lg bg-body-tertiary" data-bs-theme="dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="/">R&B Hotels</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link" aria-current="page" href="/">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/about">About</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Rooms
                            </a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="/generals">General</a></li>
                                <li><a class="dropdown-item" href="/suites">Suite</a></li>
                            </ul>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" aria-disabled="true" href="/search-availability">Book Now</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" aria-disabled="true" href="/contact">Contact</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container-fluid">

        {{block "content" .}}
        
        {{end}}

        {{block "js" .}}    

        {{end}}
        <div class="row my-footer">
            <div class="col">
                Lef
            </div>
            <div class="col">
                Middle
            </div>
            <div class="col">
                Right
            </div>
        </div>


            <script>

            // This is function to validate forms
            (function () {
                    'use strict'
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.querySelectorAll('.needs-validation')

                    // Loop over them and prevent submission
                    Array.prototype.slice.call(forms)
                        .forEach(function (form) {
                            form.addEventListener('submit', function (event) {
                                if (!form.checkValidity()) {
                                    event.preventDefault()
                                    event.stopPropagation()
                                }

                                form.classList.add('was-validated')
                            }, false)
                        })
                })()

            let attention = Prompt();
              // Example starter JavaScript for disabling form submissions if there are invalid fields
             function notifyModel(title,text,icon,confirmButtonText){
                    Swal.fire({
                    html: text,
                    toast:true,
                  })
                }
             function Prompt(){
                     // This is the method to display toast
                  let toast = function(c){
                    const {
                      msg = "",
                      icon = 'success',
                      position = 'top-end'
                    } = c;

                    let Toast = Swal.mixin({
                      toast: true,
                      position: position ,
                      showConfirmButton: false,
                      timer: 3000,
                        icon: icon,
                        title: msg,
                      timerProgressBar: true,
                      didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                      }

                    })
                    Toast.fire({})
                  }

                  let success = function (c) {

                    const {
                      msg ="",
                      title= "",
                      footer=""

                    } = c;
                      Swal.fire({
                        icon: 'success',
                        title: title,
                        text: msg,
                        footer: footer
                      })
                   }


               let error = function (c) {

                    const {
                      msg = "",
                      title = "",
                      footer = ""

                    } = c;
                    Swal.fire({
                      icon: 'error',
                      title: title,
                      text: msg,
                      footer: footer
                    })
                  }
                // custom function to multiple inputs alert.
                async function custom(c) {

                    const {
                      msg = "",
                      title = "",

                    } = c;
                    const { value: result } = await Swal.fire({
                    title: title,
                    html:msg,
                        backdrop:false,
                    showCancelButton: true,
                    focusConfirm: false,
                    willOpen: () =>{
                      if(c.willOpen !== undefined){
                          c.willOpen();
                      }
                    },
                    didOpen: () =>{
                     if(c.didOpen !== undefined){
                         c.didOpen();
                     }
                    },
                    preConfirm: () => {
                      return [
                        document.getElementById('start').value,
                        document.getElementById('end').value
                      ]
                    }
                  })

                  if (result) {
                      if(result.dismiss != swal.DismissReason.cancel){
                          if(result.value != ""){
                              if(c.callback != undefined){
                                  c.callback(result);

                              }
                          }else{
                              c.callback(false);
                          }
                      }else{
                          c.callback(false);
                      }
                  }
                  }

                  return{
                    toast : toast,
                    success: success,
                    error: error,
                    custom:custom,
                  }

                }

            </script>
            </div>

    </body>

    </html>

{{end}}